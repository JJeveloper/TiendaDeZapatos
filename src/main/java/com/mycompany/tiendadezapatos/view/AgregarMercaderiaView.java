/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.tiendadezapatos.view;

import com.mycompany.tiendadezapatos.dao.CompraMercanciaDAO;
import com.mycompany.tiendadezapatos.dao.DetalleCompraDAO;
import com.mycompany.tiendadezapatos.dao.MercanciaDAO;
import com.mycompany.tiendadezapatos.dao.ProveedorDAO;
import com.mycompany.tiendadezapatos.model.CompraMercancia;
import com.mycompany.tiendadezapatos.model.DetalleCompra;
import com.mycompany.tiendadezapatos.model.Mercancia;
import com.mycompany.tiendadezapatos.model.Proveedor;
import java.awt.Component;
import java.math.BigDecimal;
import static java.math.RoundingMode.UNNECESSARY;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JJAB
 */
public class AgregarMercaderiaView extends javax.swing.JInternalFrame {

    /**
     * Creates new form AgregarMercaderiaView
     */
    private DefaultTableModel dtmMercaderia;
    private int idProveedor;
    private CompraMercanciaDAO compraMercanciaDAO = new CompraMercanciaDAO();
    private ProveedorDAO proveedorDao = new ProveedorDAO();
    private DetalleCompraDAO detalleCompraDAO = new DetalleCompraDAO();
    private MercanciaDAO mercanciaDAO = new MercanciaDAO();

    public AgregarMercaderiaView() {
        initComponents();

        creartablaMercancia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelAgregarMercaderia = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtPrecioCompra = new javax.swing.JTextField();
        txtPrecioVenta = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMercancia = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnSeleccionar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panelAgregarMercaderia.setBorder(javax.swing.BorderFactory.createTitledBorder("Agregar Mercaderia"));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel1.setText("Nombre");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel2.setText("Cantidad");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel3.setText("Precio Compra");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel4.setText("Precio Venta");

        btnAgregar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel5.setText("Min - Max:  0.01 - 9999.99");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel6.setText("Min - Max:  0.01 - 9999.99");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel7.setText("Min - Max: 1 - 10000");

        javax.swing.GroupLayout panelAgregarMercaderiaLayout = new javax.swing.GroupLayout(panelAgregarMercaderia);
        panelAgregarMercaderia.setLayout(panelAgregarMercaderiaLayout);
        panelAgregarMercaderiaLayout.setHorizontalGroup(
            panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarMercaderiaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregar)
                    .addGroup(panelAgregarMercaderiaLayout.createSequentialGroup()
                        .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelAgregarMercaderiaLayout.createSequentialGroup()
                                .addComponent(txtPrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(panelAgregarMercaderiaLayout.createSequentialGroup()
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addComponent(jLabel4)
                            .addGroup(panelAgregarMercaderiaLayout.createSequentialGroup()
                                .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        panelAgregarMercaderiaLayout.setVerticalGroup(
            panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgregarMercaderiaLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(txtCantidad))
                .addGap(12, 12, 12)
                .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAgregarMercaderiaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(66, 66, 66))
                    .addGroup(panelAgregarMercaderiaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAgregarMercaderiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(txtPrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Guardar Mercancia"));

        tblMercancia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblMercancia);

        btnGuardar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnSeleccionar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSeleccionar.setForeground(new java.awt.Color(0, 0, 0));
        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(0, 0, 0));
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardar)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnSeleccionar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar))
                            .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelAgregarMercaderia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(panelAgregarMercaderia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void ObtenerIdProveedor(int idProveedor) {
        this.idProveedor = idProveedor;
    }

    private void creartablaMercancia() {
        dtmMercaderia = new DefaultTableModel();
        dtmMercaderia.addColumn("Nombre");
        dtmMercaderia.addColumn("Codigo");
        dtmMercaderia.addColumn("Cantidad");
        dtmMercaderia.addColumn("Precio Compra");
        dtmMercaderia.addColumn("Precio Venta");
        dtmMercaderia.addColumn("Total");

        tblMercancia.setModel(dtmMercaderia);
    }

    private void limpiarCampos() {
        for (Component c : panelAgregarMercaderia.getComponents()) {
            if (c instanceof JTextField txt) {
                txt.setText("");
            }
        }
    }

    public String generaryValidarCodigoMercancia() {

        Random r = new Random();

        String codigoMercancia = r.nextInt(1000 + 1, 9999 + 1) + "";

        proveedorDao.obtenerCodigoProveedor(idProveedor);

        while (mercanciaDAO.validarCodigoProveedor(codigoMercancia)) {

            codigoMercancia = r.nextInt(1000 + 1, 9999 + 1) + "";
        }

        return proveedorDao.obtenerCodigoProveedor(idProveedor) + "" + codigoMercancia;

    }


    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String nombre = txtNombre.getText().trim();
        String cantidad = txtCantidad.getText().trim();
        String precioCompra = txtPrecioCompra.getText().trim();
        String precioVenta = txtPrecioVenta.getText().trim();

        if (!nombre.isEmpty()) {

            if (validarCantidad(cantidad) && !cantidad.isEmpty()) {

                if (validarPrecios(precioCompra) && validarPrecios(precioVenta) && !precioCompra.isEmpty() && !precioVenta.isEmpty()) {

                    BigDecimal bigCompra = new BigDecimal(precioCompra);
                    BigDecimal bigVenta = new BigDecimal(precioVenta);

                    //comparar que el valor de comprasea menor que el de venta
                    if (bigCompra.compareTo(bigVenta) <= 0) {

                        BigDecimal bigCantidad = new BigDecimal(cantidad);

                        BigDecimal roundCompra = bigCompra.setScale(2, UNNECESSARY);
                        BigDecimal roundVenta = bigVenta.setScale(2, UNNECESSARY);

                        dtmMercaderia.addRow(new Object[]{nombre, generaryValidarCodigoMercancia(), cantidad, roundCompra, roundVenta, bigCompra.multiply(bigCantidad)});

                        calcularTotalCompra();

                        limpiarCampos();
                    } else {
                        JOptionPane.showMessageDialog(this, "El valor de compra no puede ser menor que el valor de venta", "", JOptionPane.ERROR_MESSAGE);

                    }

                } else {

                    JOptionPane.showMessageDialog(this, "Verifique que los precios sean correctos", "", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Verifique la cantidad");

            }

        } else {
            JOptionPane.showMessageDialog(this, "El campo nombre no puede estar vacio");

        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    /*
     * Validacion Cantidad
     * expresion regular que permite cantidades de 
     * 1 hasta 99999
     */
    private boolean validarCantidad(String cantidad) {
        return cantidad.matches("[1-9]([0-9]{0,4})?");
    }


    /*
     * Validacion Precios
     * expresion regular que permite validar precios de
     * 0.01 hasta 9999.99
     */
    private boolean validarPrecios(String precioCompra) {
        return precioCompra.matches("^([0-9]{1,5})(.)([0-9]{2})");
    }

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        int filas = tblMercancia.getRowCount();

        if (filas > 0) {

            int opcion = JOptionPane.showConfirmDialog(this, "¿Desea realizar la compra?", "Eliminar", JOptionPane.YES_NO_OPTION);

            if (opcion == JOptionPane.YES_NO_OPTION) {

                CompraMercancia compraMercancia = new CompraMercancia();
                CompraRealizadaView compraRealizadaView = new CompraRealizadaView();

                try {

                    compraMercancia.setFechacompra(new Date());

                    compraMercancia.setProveedorIdproveedor(new Proveedor(idProveedor));

                    compraMercancia.setTotal(calcularTotalCompra());

                    compraMercanciaDAO.crearCompraMercancia(compraMercancia);
                } catch (Exception e) {
                    System.out.println("");
                }

                for (int i = 0; i < tblMercancia.getRowCount(); i++) {

                    Mercancia mercancia = new Mercancia();
                    DetalleCompra detalleCompra = new DetalleCompra();

                    mercancia.setNombre("" + tblMercancia.getModel().getValueAt(i, 0));
                    mercancia.setCodigo("" + tblMercancia.getModel().getValueAt(i, 1));
                    mercancia.setStock(Integer.parseInt("" + tblMercancia.getModel().getValueAt(i, 2)));
                    mercancia.setPrecioCompraUnidad(new BigDecimal("" + tblMercancia.getModel().getValueAt(i, 3)));
                    mercancia.setPrecioVentaUnidad(new BigDecimal("" + tblMercancia.getModel().getValueAt(i, 4)));

                    mercanciaDAO.crearMercancia(mercancia);

                    detalleCompra.setMercanciaIdmercancia(mercanciaDAO.obtenerMercanciaPorID(mercancia.getIdmercancia()));
                    detalleCompra.setCompraMercanciaIdcompraMercancia(compraMercanciaDAO.obtenercompraMercanciaPorID(compraMercancia.getIdcompraMercancia()));

                    detalleCompra.setCantidad(Integer.parseInt("" + tblMercancia.getModel().getValueAt(i, 2)));

                    detalleCompraDAO.crearDetalleCompra(detalleCompra);

                    compraRealizadaView.crearListaMercancia(mercancia);

                }

                compraRealizadaView.obtenerCompraMercancia(compraMercancia);
                compraRealizadaView.obtenerMercancia();

                compraRealizadaView.setVisible(true);

                PrincipalView.panelPrincipal.add(compraRealizadaView);
                this.setVisible(false);

            }

        } else {
            JOptionPane.showMessageDialog(this, "No se puede realizar la compra en 0");

        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private BigDecimal calcularTotalCompra() {
        BigDecimal total = new BigDecimal("0");

        for (int i = 0; i < tblMercancia.getRowCount(); i++) {
            total = total.add(new BigDecimal("" + tblMercancia.getModel().getValueAt(i, 5)));

        }
        lblTotal.setText("Total a pagar: " + total);
        return total;

    }


    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed

        try {

            txtNombre.setText("" + tblMercancia.getModel().getValueAt(tblMercancia.getSelectedRow(), 0));
            txtCantidad.setText("" + tblMercancia.getModel().getValueAt(tblMercancia.getSelectedRow(), 1));
            txtPrecioCompra.setText("" + tblMercancia.getModel().getValueAt(tblMercancia.getSelectedRow(), 2));
            txtPrecioVenta.setText("" + tblMercancia.getModel().getValueAt(tblMercancia.getSelectedRow(), 3));
        } catch (Exception e) {

        }

    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try {

            tblMercancia.getModel().setValueAt(txtNombre.getText(), tblMercancia.getSelectedRow(), 0);
            tblMercancia.getModel().setValueAt(txtCantidad.getText(), tblMercancia.getSelectedRow(), 1);
            tblMercancia.getModel().setValueAt(txtPrecioCompra.getText(), tblMercancia.getSelectedRow(), 2);
            tblMercancia.getModel().setValueAt(txtPrecioVenta.getText(), tblMercancia.getSelectedRow(), 3);
            limpiarCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Seleccione una fila");
        }


    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        if (tblMercancia.getRowCount() > 0) {
            DefaultTableModel eliminarFila = (DefaultTableModel) tblMercancia.getModel();
            eliminarFila.removeRow(tblMercancia.getSelectedRow());

            calcularTotalCompra();

            limpiarCampos();

        }


    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JPanel panelAgregarMercaderia;
    private javax.swing.JTable tblMercancia;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecioCompra;
    private javax.swing.JTextField txtPrecioVenta;
    // End of variables declaration//GEN-END:variables
}
